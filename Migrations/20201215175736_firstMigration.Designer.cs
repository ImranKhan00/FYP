// <auto-generated />
using System;
using FYP.DAL;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FYP.Migrations
{
    [DbContext(typeof(HealthAnalyzerDataContext))]
    [Migration("20201215175736_firstMigration")]
    partial class firstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FYP.Models.Cure", b =>
                {
                    b.Property<int>("CureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CureId");

                    b.ToTable("Cures");
                });

            modelBuilder.Entity("FYP.Models.Diagnosis", b =>
                {
                    b.Property<int>("DiagnosisId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("DiagnosisId");

                    b.HasIndex("UserId");

                    b.ToTable("Diagnoses");
                });

            modelBuilder.Entity("FYP.Models.Disease", b =>
                {
                    b.Property<int>("DiseaseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiseaseId");

                    b.ToTable("Diseases");
                });

            modelBuilder.Entity("FYP.Models.DiseaseCure", b =>
                {
                    b.Property<int>("DiseaseCureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CureId")
                        .HasColumnType("int");

                    b.Property<int?>("DiseaseId")
                        .HasColumnType("int");

                    b.HasKey("DiseaseCureId");

                    b.HasIndex("CureId");

                    b.HasIndex("DiseaseId");

                    b.ToTable("DiseaseCures");
                });

            modelBuilder.Entity("FYP.Models.DiseasePrecaution", b =>
                {
                    b.Property<int>("DiseasePrecautionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<int?>("PrecautionId")
                        .HasColumnType("int");

                    b.HasKey("DiseasePrecautionId");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("PrecautionId");

                    b.ToTable("DiseasePrecautions");
                });

            modelBuilder.Entity("FYP.Models.DiseaseSymptoms", b =>
                {
                    b.Property<int>("DiseaseSymptomsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DiseaseId")
                        .HasColumnType("int");

                    b.Property<string>("Severity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SymptomsSymtomsId")
                        .HasColumnType("int");

                    b.HasKey("DiseaseSymptomsId");

                    b.HasIndex("DiseaseId");

                    b.HasIndex("SymptomsSymtomsId");

                    b.ToTable("DiseaseSymptoms");
                });

            modelBuilder.Entity("FYP.Models.Precaution", b =>
                {
                    b.Property<int>("PrecautionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PrecautionId");

                    b.ToTable("Precautions");
                });

            modelBuilder.Entity("FYP.Models.Symptoms", b =>
                {
                    b.Property<int>("SymtomsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SymtomsId");

                    b.ToTable("Symptoms");
                });

            modelBuilder.Entity("FYP.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contact")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FYP.Models.Diagnosis", b =>
                {
                    b.HasOne("FYP.Models.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");
                });

            modelBuilder.Entity("FYP.Models.DiseaseCure", b =>
                {
                    b.HasOne("FYP.Models.Cure", "Cure")
                        .WithMany()
                        .HasForeignKey("CureId");

                    b.HasOne("FYP.Models.Disease", "Disease")
                        .WithMany()
                        .HasForeignKey("DiseaseId");
                });

            modelBuilder.Entity("FYP.Models.DiseasePrecaution", b =>
                {
                    b.HasOne("FYP.Models.Disease", "Disease")
                        .WithMany()
                        .HasForeignKey("DiseaseId");

                    b.HasOne("FYP.Models.Precaution", "Precaution")
                        .WithMany()
                        .HasForeignKey("PrecautionId");
                });

            modelBuilder.Entity("FYP.Models.DiseaseSymptoms", b =>
                {
                    b.HasOne("FYP.Models.Disease", "Disease")
                        .WithMany()
                        .HasForeignKey("DiseaseId");

                    b.HasOne("FYP.Models.Symptoms", "Symptoms")
                        .WithMany()
                        .HasForeignKey("SymptomsSymtomsId");
                });
#pragma warning restore 612, 618
        }
    }
}
